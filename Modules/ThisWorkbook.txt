VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "ThisWorkbook"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
'*************************************************************
'*************************************************************
'*                  ThisWorkbook
'*
'*************************************************************
'*************************************************************


Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Call Validations.CloseDataValidations

'    On Error Resume Next
'    Workbooks("RoutineMapDataValidations.xlsm").Close SaveChanges:=False
End Sub

Private Sub Workbook_Open()
    Call Validations.OpenDataValidations
End Sub

Public Function IsInColl(col As Collection, val As Range) As Boolean
    For Each subitem In col
        If subitem = val Then
            IsInColl = True
        End If
    Next subitem
End Function


Sub events()
    Application.EnableEvents = True
End Sub

'Called by PartLib and PivotFeature
Public Sub SetBorders(target As Range)
    target.Borders(xlEdgeTop).Weight = xlThin
    target.Borders(xlEdgeBottom).Weight = xlThin
    target.Borders(xlEdgeLeft).Weight = xlThin
    target.Borders(xlEdgeRight).Weight = xlThin
End Sub

Public Function GetNumericSuffix(partNum As String) As String
    Dim i As Integer
    i = 0
    Dim endNum As String
    
    While IsNumeric(Mid(partNum, Len(partNum) - i, 1))
        i = i + 1
        endNum = Right(partNum, i)
        If Len(partNum) = i Then GoTo 10
    Wend
10
    GetNumericSuffix = endNum

End Function





Sub test()
    Dim a As String
    a = "80"
    Debug.Print (GetNumericSuffix(a))
    Dim sample As String
    sample = Split(a, GetNumericSuffix(a))(0)
    If sample = vbNullString Then
        MsgBox ("its nothing")
    End If

End Sub

Sub teste2()
    MsgBox (ThisWorkbook.path & "\Output\New_Test.qif")


End Sub


Sub arrTest()
    Dim arr() As Variant
    For i = 0 To 3
        If (Not arr) = -1 Then
            ReDim Preserve arr(0 To 4, 0)
        Else
            ReDim Preserve arr(0 To 4, 0 To UBound(arr, 2) + 1)
        End If
        Debug.Print (UBound(arr, 2))
    Next i


End Sub






